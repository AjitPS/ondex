<?xml version='1.0' encoding='UTF-8'?><wsdl:definitions name="ONDEXapiWSService" targetNamespace="http://wsapi.ondex.sourceforge.net/" xmlns:ns1="http://cxf.apache.org/bindings/xformat" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://wsapi.ondex.sourceforge.net/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
<xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://result.wsapi.ondex.sourceforge.net" xmlns:tns="http://result.wsapi.ondex.sourceforge.net" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:complexType name="WSRelationType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="antisymmetric" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fullname" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="inverseName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="reflexive" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="specialisationOf" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="symmetric" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="transitiv" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSGraph">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSDataSource">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fullname" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSConceptClass">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fullname" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="specialisationOf" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSAttributeName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="datatype" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fullname" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="specialisationOf" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="unit" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSRelationKey">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="fromID" type="xsd:int"/>
      <xsd:element minOccurs="0" name="rtId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="toID" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSEvidenceType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fullname" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSRelation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="fromConceptId" type="xsd:int"/>
      <xsd:element minOccurs="0" name="fromConceptName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="ofType" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="toConceptId" type="xsd:int"/>
      <xsd:element minOccurs="0" name="toConceptName" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSConceptAccession">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="accession" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="elementOf" nillable="true" type="tns:WSDataSource"/>
      <xsd:element minOccurs="0" name="isAmbiguous" nillable="true" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="PID" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="annotation" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="elementOf" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="ofType" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSUnit">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fullname" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSAttribute">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="doIndex" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="typeOf" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="valueAsXML" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSConceptName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="isPreferred" nillable="true" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>
<xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://wsapi.ondex.sourceforge.net/" xmlns:ns0="http://util.java" xmlns:ns1="http://result.wsapi.ondex.sourceforge.net" xmlns:ns2="http://exceptions.wsapi.ondex.sourceforge.net" xmlns:tns="http://wsapi.ondex.sourceforge.net/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import namespace="http://util.java"/>
  <xsd:import namespace="http://result.wsapi.ondex.sourceforge.net"/>
  <xsd:complexType name="ArrayOfString">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="string" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteConcept" type="tns:deleteConcept"/>
  <xsd:complexType name="deleteConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteConceptResponse" type="tns:deleteConceptResponse"/>
  <xsd:complexType name="deleteConceptResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="importGraph" type="tns:importGraph"/>
  <xsd:complexType name="importGraph">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="oxlString" nillable="true" type="xsd:string"/>
      <xsd:element name="oxlByteArray" nillable="true" type="xsd:base64Binary"/>
      <xsd:element name="IgnoreAttribute" nillable="true" type="tns:ArrayOfString"/>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="importGraphResponse" type="tns:importGraphResponse"/>
  <xsd:complexType name="importGraphResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="report" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createEvidenceType" type="tns:createEvidenceType"/>
  <xsd:complexType name="createEvidenceType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="evidenceTypeId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fullname" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createEvidenceTypeResponse" type="tns:createEvidenceTypeResponse"/>
  <xsd:complexType name="createEvidenceTypeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="evidenceTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteEvidenceType" type="tns:deleteEvidenceType"/>
  <xsd:complexType name="deleteEvidenceType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="evidenceTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteEvidenceTypeResponse" type="tns:deleteEvidenceTypeResponse"/>
  <xsd:complexType name="deleteEvidenceTypeResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getEvidenceConcept" type="tns:getEvidenceConcept"/>
  <xsd:complexType name="getEvidenceConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getEvidenceConceptResponse" type="tns:getEvidenceConceptResponse"/>
  <xsd:complexType name="getEvidenceConceptResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSEvidenceTypes" type="ns0:WSEvidenceTypes"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getOfTypeRelation" type="tns:getOfTypeRelation"/>
  <xsd:complexType name="getOfTypeRelation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getOfTypeRelationResponse" type="tns:getOfTypeRelationResponse"/>
  <xsd:complexType name="getOfTypeRelationResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelationType" type="ns1:WSRelationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteAttributeName" type="tns:deleteAttributeName"/>
  <xsd:complexType name="deleteAttributeName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteAttributeNameResponse" type="tns:deleteAttributeNameResponse"/>
  <xsd:complexType name="deleteAttributeNameResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getToConcept" type="tns:getToConcept"/>
  <xsd:complexType name="getToConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getToConceptResponse" type="tns:getToConceptResponse"/>
  <xsd:complexType name="getToConceptResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConcept" type="ns1:WSConcept"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptsOfEvidenceType" type="tns:getConceptsOfEvidenceType"/>
  <xsd:complexType name="getConceptsOfEvidenceType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="evidenceTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptsOfEvidenceTypeResponse" type="tns:getConceptsOfEvidenceTypeResponse"/>
  <xsd:complexType name="getConceptsOfEvidenceTypeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConcepts" type="ns0:WSConcepts"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createRelation" type="tns:createRelation"/>
  <xsd:complexType name="createRelation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="fromConceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="toConceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="relationTypeId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="evidenceTypeIdList" type="ns0:evidenceTypeIdList"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createRelationResponse" type="tns:createRelationResponse"/>
  <xsd:complexType name="createRelationResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="checkConceptClass" type="tns:checkConceptClass"/>
  <xsd:complexType name="checkConceptClass">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptClassId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="checkConceptClassResponse" type="tns:checkConceptClassResponse"/>
  <xsd:complexType name="checkConceptClassResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="exists" nillable="true" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="checkAttributeName" type="tns:checkAttributeName"/>
  <xsd:complexType name="checkAttributeName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="checkAttributeNameResponse" type="tns:checkAttributeNameResponse"/>
  <xsd:complexType name="checkAttributeNameResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="exists" nillable="true" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAnnotation" type="tns:getAnnotation"/>
  <xsd:complexType name="getAnnotation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAnnotationResponse" type="tns:getAnnotationResponse"/>
  <xsd:complexType name="getAnnotationResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="annotation" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteConceptName" type="tns:deleteConceptName"/>
  <xsd:complexType name="deleteConceptName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteConceptNameResponse" type="tns:deleteConceptNameResponse"/>
  <xsd:complexType name="deleteConceptNameResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createDataSource" type="tns:createDataSource"/>
  <xsd:complexType name="createDataSource">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="dataSourceId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fullname" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createDataSourceResponse" type="tns:createDataSourceResponse"/>
  <xsd:complexType name="createDataSourceResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="dataSourceId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="cloneGraph" type="tns:cloneGraph"/>
  <xsd:complexType name="cloneGraph">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="cloneGraphResponse" type="tns:cloneGraphResponse"/>
  <xsd:complexType name="cloneGraphResponse">
    <xsd:sequence>
      <xsd:element name="graphId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteConceptClass" type="tns:deleteConceptClass"/>
  <xsd:complexType name="deleteConceptClass">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="ConceptClassId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteConceptClassResponse" type="tns:deleteConceptClassResponse"/>
  <xsd:complexType name="deleteConceptClassResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptNameWithName" type="tns:getConceptNameWithName"/>
  <xsd:complexType name="getConceptNameWithName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptNameWithNameResponse" type="tns:getConceptNameWithNameResponse"/>
  <xsd:complexType name="getConceptNameWithNameResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConceptName" type="ns1:WSConceptName"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelation" type="tns:getRelation"/>
  <xsd:complexType name="getRelation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationResponse" type="tns:getRelationResponse"/>
  <xsd:complexType name="getRelationResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelation" type="ns1:WSRelation"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createConceptClass" type="tns:createConceptClass"/>
  <xsd:complexType name="createConceptClass">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptClassId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fullname" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="specialisationOfConceptClassId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createConceptClassResponse" type="tns:createConceptClassResponse"/>
  <xsd:complexType name="createConceptClassResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="conceptClassId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptAccession" type="tns:getConceptAccession"/>
  <xsd:complexType name="getConceptAccession">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="accession" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="elementOfDataSourceId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptAccessionResponse" type="tns:getConceptAccessionResponse"/>
  <xsd:complexType name="getConceptAccessionResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConceptAccession" type="ns1:WSConceptAccession"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="inheritedFromRelation" type="tns:inheritedFromRelation"/>
  <xsd:complexType name="inheritedFromRelation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="relationTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="inheritedFromRelationResponse" type="tns:inheritedFromRelationResponse"/>
  <xsd:complexType name="inheritedFromRelationResponse">
    <xsd:sequence>
      <xsd:element name="inheritedFrom" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createConceptName" type="tns:createConceptName"/>
  <xsd:complexType name="createConceptName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="isPreferred" nillable="true" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createConceptNameResponse" type="tns:createConceptNameResponse"/>
  <xsd:complexType name="createConceptNameResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="importGraphLite" type="tns:importGraphLite"/>
  <xsd:complexType name="importGraphLite">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="xml" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="importGraphLiteResponse" type="tns:importGraphLiteResponse"/>
  <xsd:complexType name="importGraphLiteResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="report" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptClass" type="tns:getConceptClass"/>
  <xsd:complexType name="getConceptClass">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptClassId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptClassResponse" type="tns:getConceptClassResponse"/>
  <xsd:complexType name="getConceptClassResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConceptClass" type="ns1:WSConceptClass"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationAttributes" type="tns:getRelationAttributes"/>
  <xsd:complexType name="getRelationAttributes">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationAttributesResponse" type="tns:getRelationAttributesResponse"/>
  <xsd:complexType name="getRelationAttributesResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSAttributes" type="ns0:WSAttributes"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfTag" type="tns:getRelationsOfTag"/>
  <xsd:complexType name="getRelationsOfTag">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="tagConceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfTagResponse" type="tns:getRelationsOfTagResponse"/>
  <xsd:complexType name="getRelationsOfTagResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelations" type="ns0:WSRelations"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDataSource" type="tns:getDataSource"/>
  <xsd:complexType name="getDataSource">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="dataSourceId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDataSourceResponse" type="tns:getDataSourceResponse"/>
  <xsd:complexType name="getDataSourceResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSDataSource" type="ns1:WSDataSource"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createConceptAttribute" type="tns:createConceptAttribute"/>
  <xsd:complexType name="createConceptAttribute">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="valueAsXML" nillable="true" type="xsd:string"/>
      <xsd:element name="doIndex" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createConceptAttributeResponse" type="tns:createConceptAttributeResponse"/>
  <xsd:complexType name="createConceptAttributeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfAttributeName" type="tns:getRelationsOfAttributeName"/>
  <xsd:complexType name="getRelationsOfAttributeName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfAttributeNameResponse" type="tns:getRelationsOfAttributeNameResponse"/>
  <xsd:complexType name="getRelationsOfAttributeNameResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelations" type="ns0:WSRelations"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="exportGraph" type="tns:exportGraph"/>
  <xsd:complexType name="exportGraph">
    <xsd:sequence>
      <xsd:element name="ExcludeConceptsOfConceptClass" nillable="true" type="tns:ArrayOfString"/>
      <xsd:element name="ExcludeRelationsOfRelationType" nillable="true" type="tns:ArrayOfString"/>
      <xsd:element name="ExcludeAttributeWithName" nillable="true" type="tns:ArrayOfString"/>
      <xsd:element name="IncludeAttributesOfName" nillable="true" type="tns:ArrayOfString"/>
      <xsd:element name="IncludeOnlyConceptClass" nillable="true" type="tns:ArrayOfString"/>
      <xsd:element name="IncludeOnlyRelationType" nillable="true" type="tns:ArrayOfString"/>
      <xsd:element minOccurs="0" name="pretty" nillable="true" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="ExportIsolatedConcepts" nillable="true" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="compression" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="exportGraphResponse" type="tns:exportGraphResponse"/>
  <xsd:complexType name="exportGraphResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="oxl" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptAccessions" type="tns:getConceptAccessions"/>
  <xsd:complexType name="getConceptAccessions">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptAccessionsResponse" type="tns:getConceptAccessionsResponse"/>
  <xsd:complexType name="getConceptAccessionsResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConceptAccessions" type="ns0:WSConceptAccessions"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptsOfConceptClass" type="tns:getConceptsOfConceptClass"/>
  <xsd:complexType name="getConceptsOfConceptClass">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptClassId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptsOfConceptClassResponse" type="tns:getConceptsOfConceptClassResponse"/>
  <xsd:complexType name="getConceptsOfConceptClassResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConcepts" type="ns0:WSConcepts"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getKey" type="tns:getKey"/>
  <xsd:complexType name="getKey">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getKeyResponse" type="tns:getKeyResponse"/>
  <xsd:complexType name="getKeyResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelationKey" type="ns1:WSRelationKey"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="setPID" type="tns:setPID"/>
  <xsd:complexType name="setPID">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="pid" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="setPIDResponse" type="tns:setPIDResponse"/>
  <xsd:complexType name="setPIDResponse">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getOXLFilesAvailable" type="tns:getOXLFilesAvailable"/>
  <xsd:complexType name="getOXLFilesAvailable">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getOXLFilesAvailableResponse" type="tns:getOXLFilesAvailableResponse"/>
  <xsd:complexType name="getOXLFilesAvailableResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="files" type="ns0:files"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getGraphs" type="tns:getGraphs"/>
  <xsd:complexType name="getGraphs">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getGraphsResponse" type="tns:getGraphsResponse"/>
  <xsd:complexType name="getGraphsResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSGraphs" type="ns0:WSGraphs"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptClasses" type="tns:getConceptClasses"/>
  <xsd:complexType name="getConceptClasses">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptClassesResponse" type="tns:getConceptClassesResponse"/>
  <xsd:complexType name="getConceptClassesResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConceptClasses" type="ns0:WSConceptClasses"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addEvidenceTypeRelation" type="tns:addEvidenceTypeRelation"/>
  <xsd:complexType name="addEvidenceTypeRelation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="evidenceTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addEvidenceTypeRelationResponse" type="tns:addEvidenceTypeRelationResponse"/>
  <xsd:complexType name="addEvidenceTypeRelationResponse">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getDataSources" type="tns:getDataSources"/>
  <xsd:complexType name="getDataSources">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDataSourcesResponse" type="tns:getDataSourcesResponse"/>
  <xsd:complexType name="getDataSourcesResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSDataSources" type="ns0:WSDataSources"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptAttribute" type="tns:getConceptAttribute"/>
  <xsd:complexType name="getConceptAttribute">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptAttributeResponse" type="tns:getConceptAttributeResponse"/>
  <xsd:complexType name="getConceptAttributeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSAttribute" type="ns1:WSAttribute"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="removeTagRelation" type="tns:removeTagRelation"/>
  <xsd:complexType name="removeTagRelation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="tagId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="removeTagRelationResponse" type="tns:removeTagRelationResponse"/>
  <xsd:complexType name="removeTagRelationResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createUnit" type="tns:createUnit"/>
  <xsd:complexType name="createUnit">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="unitId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fullname" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createUnitResponse" type="tns:createUnitResponse"/>
  <xsd:complexType name="createUnitResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="unitId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createRelationAttribute" type="tns:createRelationAttribute"/>
  <xsd:complexType name="createRelationAttribute">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="valueAsXML" nillable="true" type="xsd:string"/>
      <xsd:element name="doIndex" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createRelationAttributeResponse" type="tns:createRelationAttributeResponse"/>
  <xsd:complexType name="createRelationAttributeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getGraphOfName" type="tns:getGraphOfName"/>
  <xsd:complexType name="getGraphOfName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getGraphOfNameResponse" type="tns:getGraphOfNameResponse"/>
  <xsd:complexType name="getGraphOfNameResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSGraph" type="ns1:WSGraph"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="isReadOnly" type="tns:isReadOnly"/>
  <xsd:complexType name="isReadOnly">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="isReadOnlyResponse" type="tns:isReadOnlyResponse"/>
  <xsd:complexType name="isReadOnlyResponse">
    <xsd:sequence>
      <xsd:element name="isReadOnly" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getTagsRelation" type="tns:getTagsRelation"/>
  <xsd:complexType name="getTagsRelation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getTagsRelationResponse" type="tns:getTagsRelationResponse"/>
  <xsd:complexType name="getTagsRelationResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConcepts" type="ns0:WSConcepts"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getEvidenceRelation" type="tns:getEvidenceRelation"/>
  <xsd:complexType name="getEvidenceRelation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getEvidenceRelationResponse" type="tns:getEvidenceRelationResponse"/>
  <xsd:complexType name="getEvidenceRelationResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSEvidenceTypes" type="ns0:WSEvidenceTypes"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createRelationType" type="tns:createRelationType"/>
  <xsd:complexType name="createRelationType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationTypeId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fullname" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="inverseName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="isAntisymmetric" nillable="true" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="isReflexive" nillable="true" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="isSymmetric" nillable="true" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="isTransitiv" nillable="true" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="specialisationOfRelationTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createRelationTypeResponse" type="tns:createRelationTypeResponse"/>
  <xsd:complexType name="createRelationTypeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="relationTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="checkEvidenceType" type="tns:checkEvidenceType"/>
  <xsd:complexType name="checkEvidenceType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="evidenceTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="checkEvidenceTypeResponse" type="tns:checkEvidenceTypeResponse"/>
  <xsd:complexType name="checkEvidenceTypeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="exists" nillable="true" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getName" type="tns:getName"/>
  <xsd:complexType name="getName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getNameResponse" type="tns:getNameResponse"/>
  <xsd:complexType name="getNameResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="checkRelationType" type="tns:checkRelationType"/>
  <xsd:complexType name="checkRelationType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="checkRelationTypeResponse" type="tns:checkRelationTypeResponse"/>
  <xsd:complexType name="checkRelationTypeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="exists" nillable="true" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addTagConcept" type="tns:addTagConcept"/>
  <xsd:complexType name="addTagConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="tagId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addTagConceptResponse" type="tns:addTagConceptResponse"/>
  <xsd:complexType name="addTagConceptResponse">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getFromConcept" type="tns:getFromConcept"/>
  <xsd:complexType name="getFromConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getFromConceptResponse" type="tns:getFromConceptResponse"/>
  <xsd:complexType name="getFromConceptResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConcept" type="ns1:WSConcept"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addTagRelation" type="tns:addTagRelation"/>
  <xsd:complexType name="addTagRelation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="tagId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addTagRelationResponse" type="tns:addTagRelationResponse"/>
  <xsd:complexType name="addTagRelationResponse">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="addEvidenceTypeConcept" type="tns:addEvidenceTypeConcept"/>
  <xsd:complexType name="addEvidenceTypeConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="evidenceTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addEvidenceTypeConceptResponse" type="tns:addEvidenceTypeConceptResponse"/>
  <xsd:complexType name="addEvidenceTypeConceptResponse">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getAttributeNames" type="tns:getAttributeNames"/>
  <xsd:complexType name="getAttributeNames">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAttributeNamesResponse" type="tns:getAttributeNamesResponse"/>
  <xsd:complexType name="getAttributeNamesResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSAttributeNames" type="ns0:WSAttributeNames"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfEvidenceType" type="tns:getRelationsOfEvidenceType"/>
  <xsd:complexType name="getRelationsOfEvidenceType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="evidenceTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfEvidenceTypeResponse" type="tns:getRelationsOfEvidenceTypeResponse"/>
  <xsd:complexType name="getRelationsOfEvidenceTypeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelations" type="ns0:WSRelations"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDescription" type="tns:getDescription"/>
  <xsd:complexType name="getDescription">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDescriptionResponse" type="tns:getDescriptionResponse"/>
  <xsd:complexType name="getDescriptionResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="descriptiom" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfConcept" type="tns:getRelationsOfConcept"/>
  <xsd:complexType name="getRelationsOfConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfConceptResponse" type="tns:getRelationsOfConceptResponse"/>
  <xsd:complexType name="getRelationsOfConceptResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelations" type="ns0:WSRelations"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteDataSource" type="tns:deleteDataSource"/>
  <xsd:complexType name="deleteDataSource">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="dataSourceId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteDataSourceResponse" type="tns:deleteDataSourceResponse"/>
  <xsd:complexType name="deleteDataSourceResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="removeTagConcept" type="tns:removeTagConcept"/>
  <xsd:complexType name="removeTagConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="tagId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="removeTagConceptResponse" type="tns:removeTagConceptResponse"/>
  <xsd:complexType name="removeTagConceptResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfRelationType" type="tns:getRelationsOfRelationType"/>
  <xsd:complexType name="getRelationsOfRelationType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfRelationTypeResponse" type="tns:getRelationsOfRelationTypeResponse"/>
  <xsd:complexType name="getRelationsOfRelationTypeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelations" type="ns0:WSRelations"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="inheritedFromConcept" type="tns:inheritedFromConcept"/>
  <xsd:complexType name="inheritedFromConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="conceptClassId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="inheritedFromConceptResponse" type="tns:inheritedFromConceptResponse"/>
  <xsd:complexType name="inheritedFromConceptResponse">
    <xsd:sequence>
      <xsd:element name="inheritedFrom" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteGraph" type="tns:deleteGraph"/>
  <xsd:complexType name="deleteGraph">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteGraphResponse" type="tns:deleteGraphResponse"/>
  <xsd:complexType name="deleteGraphResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="success" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createAttributeName" type="tns:createAttributeName"/>
  <xsd:complexType name="createAttributeName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="atttributeNameId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fullname" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="unitId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="datatype" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="specialisationOfAttributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createAttributeNameResponse" type="tns:createAttributeNameResponse"/>
  <xsd:complexType name="createAttributeNameResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getEvidenceTypes" type="tns:getEvidenceTypes"/>
  <xsd:complexType name="getEvidenceTypes">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getEvidenceTypesResponse" type="tns:getEvidenceTypesResponse"/>
  <xsd:complexType name="getEvidenceTypesResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSEvidenceTypes" type="ns0:WSEvidenceTypes"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getOfTypeConcept" type="tns:getOfTypeConcept"/>
  <xsd:complexType name="getOfTypeConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getOfTypeConceptResponse" type="tns:getOfTypeConceptResponse"/>
  <xsd:complexType name="getOfTypeConceptResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConceptClass" type="ns1:WSConceptClass"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteRelationType" type="tns:deleteRelationType"/>
  <xsd:complexType name="deleteRelationType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteRelationTypeResponse" type="tns:deleteRelationTypeResponse"/>
  <xsd:complexType name="deleteRelationTypeResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteConceptAccession" type="tns:deleteConceptAccession"/>
  <xsd:complexType name="deleteConceptAccession">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="accession" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="elementOfDataSourceId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteConceptAccessionResponse" type="tns:deleteConceptAccessionResponse"/>
  <xsd:complexType name="deleteConceptAccessionResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="checkUnit" type="tns:checkUnit"/>
  <xsd:complexType name="checkUnit">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="unitId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="checkUnitResponse" type="tns:checkUnitResponse"/>
  <xsd:complexType name="checkUnitResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="exists" nillable="true" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteRelationOfType" type="tns:deleteRelationOfType"/>
  <xsd:complexType name="deleteRelationOfType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="fromConceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="toConceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="relationTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteRelationOfTypeResponse" type="tns:deleteRelationOfTypeResponse"/>
  <xsd:complexType name="deleteRelationOfTypeResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createTestGraph" type="tns:createTestGraph"/>
  <xsd:complexType name="createTestGraph">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="createTestGraphResponse" type="tns:createTestGraphResponse"/>
  <xsd:complexType name="createTestGraphResponse">
    <xsd:sequence>
      <xsd:element name="graphId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationOfType" type="tns:getRelationOfType"/>
  <xsd:complexType name="getRelationOfType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="fromConceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="toConceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="relationTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationOfTypeResponse" type="tns:getRelationOfTypeResponse"/>
  <xsd:complexType name="getRelationOfTypeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelation" type="ns1:WSRelation"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createConcept" type="tns:createConcept"/>
  <xsd:complexType name="createConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="parserId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="annotation" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="elementOfDataSourceId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="ofTypeConceptClassId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="evidenceTypeIdList" type="ns0:evidenceTypeIdList"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createConceptResponse" type="tns:createConceptResponse"/>
  <xsd:complexType name="createConceptResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getTagsConcept" type="tns:getTagsConcept"/>
  <xsd:complexType name="getTagsConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getTagsConceptResponse" type="tns:getTagsConceptResponse"/>
  <xsd:complexType name="getTagsConceptResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConcepts" type="ns0:WSConcepts"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationAttribute" type="tns:getRelationAttribute"/>
  <xsd:complexType name="getRelationAttribute">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationAttributeResponse" type="tns:getRelationAttributeResponse"/>
  <xsd:complexType name="getRelationAttributeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSAttribute" type="ns1:WSAttribute"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConcepts" type="tns:getConcepts"/>
  <xsd:complexType name="getConcepts">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptsResponse" type="tns:getConceptsResponse"/>
  <xsd:complexType name="getConceptsResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConcepts" type="ns0:WSConcepts"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelations" type="tns:getRelations"/>
  <xsd:complexType name="getRelations">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsResponse" type="tns:getRelationsResponse"/>
  <xsd:complexType name="getRelationsResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelations" type="ns0:WSRelations"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfConceptClass" type="tns:getRelationsOfConceptClass"/>
  <xsd:complexType name="getRelationsOfConceptClass">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptClassId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfConceptClassResponse" type="tns:getRelationsOfConceptClassResponse"/>
  <xsd:complexType name="getRelationsOfConceptClassResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelations" type="ns0:WSRelations"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConcept" type="tns:getConcept"/>
  <xsd:complexType name="getConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptResponse" type="tns:getConceptResponse"/>
  <xsd:complexType name="getConceptResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConcept" type="ns1:WSConcept"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptsOfTag" type="tns:getConceptsOfTag"/>
  <xsd:complexType name="getConceptsOfTag">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptsOfTagResponse" type="tns:getConceptsOfTagResponse"/>
  <xsd:complexType name="getConceptsOfTagResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConcepts" type="ns0:WSConcepts"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="exportGraphLite" type="tns:exportGraphLite"/>
  <xsd:complexType name="exportGraphLite">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="exportGraphLiteResponse" type="tns:exportGraphLiteResponse"/>
  <xsd:complexType name="exportGraphLiteResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="oxl" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationTypes" type="tns:getRelationTypes"/>
  <xsd:complexType name="getRelationTypes">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationTypesResponse" type="tns:getRelationTypesResponse"/>
  <xsd:complexType name="getRelationTypesResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelationTypes" type="ns0:WSRelationTypes"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationType" type="tns:getRelationType"/>
  <xsd:complexType name="getRelationType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationTypeResponse" type="tns:getRelationTypeResponse"/>
  <xsd:complexType name="getRelationTypeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelationType" type="ns1:WSRelationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="removeEvidenceTypeConcept" type="tns:removeEvidenceTypeConcept"/>
  <xsd:complexType name="removeEvidenceTypeConcept">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="evidenceTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="removeEvidenceTypeConceptResponse" type="tns:removeEvidenceTypeConceptResponse"/>
  <xsd:complexType name="removeEvidenceTypeConceptResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createConceptAccession" type="tns:createConceptAccession"/>
  <xsd:complexType name="createConceptAccession">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="accession" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="elementOfDataSourceId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="isAmbiguous" nillable="true" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createConceptAccessionResponse" type="tns:createConceptAccessionResponse"/>
  <xsd:complexType name="createConceptAccessionResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="accession" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="setAnnotation" type="tns:setAnnotation"/>
  <xsd:complexType name="setAnnotation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="annotation" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="setAnnotationResponse" type="tns:setAnnotationResponse"/>
  <xsd:complexType name="setAnnotationResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="success" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptNames" type="tns:getConceptNames"/>
  <xsd:complexType name="getConceptNames">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptNamesResponse" type="tns:getConceptNamesResponse"/>
  <xsd:complexType name="getConceptNamesResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConceptNames" type="ns0:WSConceptNames"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createGraph" type="tns:createGraph"/>
  <xsd:complexType name="createGraph">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createGraphResponse" type="tns:createGraphResponse"/>
  <xsd:complexType name="createGraphResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptName" type="tns:getConceptName"/>
  <xsd:complexType name="getConceptName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptNameResponse" type="tns:getConceptNameResponse"/>
  <xsd:complexType name="getConceptNameResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConceptName" type="ns1:WSConceptName"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="setDescription" type="tns:setDescription"/>
  <xsd:complexType name="setDescription">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="setDescriptionResponse" type="tns:setDescriptionResponse"/>
  <xsd:complexType name="setDescriptionResponse">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getUnits" type="tns:getUnits"/>
  <xsd:complexType name="getUnits">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getUnitsResponse" type="tns:getUnitsResponse"/>
  <xsd:complexType name="getUnitsResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSUnits" type="ns0:WSUnits"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="checkDataSource" type="tns:checkDataSource"/>
  <xsd:complexType name="checkDataSource">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="dataSourceId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="checkDataSourceResponse" type="tns:checkDataSourceResponse"/>
  <xsd:complexType name="checkDataSourceResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="exists" nillable="true" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteConceptAttribute" type="tns:deleteConceptAttribute"/>
  <xsd:complexType name="deleteConceptAttribute">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteConceptAttributeResponse" type="tns:deleteConceptAttributeResponse"/>
  <xsd:complexType name="deleteConceptAttributeResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptsOfDataSource" type="tns:getConceptsOfDataSource"/>
  <xsd:complexType name="getConceptsOfDataSource">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="dataSourceId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptsOfDataSourceResponse" type="tns:getConceptsOfDataSourceResponse"/>
  <xsd:complexType name="getConceptsOfDataSourceResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConcepts" type="ns0:WSConcepts"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptAttributes" type="tns:getConceptAttributes"/>
  <xsd:complexType name="getConceptAttributes">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptAttributesResponse" type="tns:getConceptAttributesResponse"/>
  <xsd:complexType name="getConceptAttributesResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSAttributes" type="ns0:WSAttributes"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createMemoryGraph" type="tns:createMemoryGraph"/>
  <xsd:complexType name="createMemoryGraph">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="createMemoryGraphResponse" type="tns:createMemoryGraphResponse"/>
  <xsd:complexType name="createMemoryGraphResponse">
    <xsd:sequence>
      <xsd:element name="graphId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getEvidenceType" type="tns:getEvidenceType"/>
  <xsd:complexType name="getEvidenceType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="evidenceTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getEvidenceTypeResponse" type="tns:getEvidenceTypeResponse"/>
  <xsd:complexType name="getEvidenceTypeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSEvidenceType" type="ns1:WSEvidenceType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getUnit" type="tns:getUnit"/>
  <xsd:complexType name="getUnit">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="unitId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getUnitResponse" type="tns:getUnitResponse"/>
  <xsd:complexType name="getUnitResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSUnit" type="ns1:WSUnit"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptsOfAttributeName" type="tns:getConceptsOfAttributeName"/>
  <xsd:complexType name="getConceptsOfAttributeName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getConceptsOfAttributeNameResponse" type="tns:getConceptsOfAttributeNameResponse"/>
  <xsd:complexType name="getConceptsOfAttributeNameResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConcepts" type="ns0:WSConcepts"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="removeEvidenceTypeRelation" type="tns:removeEvidenceTypeRelation"/>
  <xsd:complexType name="removeEvidenceTypeRelation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="evidenceTypeId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="removeEvidenceTypeRelationResponse" type="tns:removeEvidenceTypeRelationResponse"/>
  <xsd:complexType name="removeEvidenceTypeRelationResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteRelation" type="tns:deleteRelation"/>
  <xsd:complexType name="deleteRelation">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteRelationResponse" type="tns:deleteRelationResponse"/>
  <xsd:complexType name="deleteRelationResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfDataSource" type="tns:getRelationsOfDataSource"/>
  <xsd:complexType name="getRelationsOfDataSource">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="dataSourceId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRelationsOfDataSourceResponse" type="tns:getRelationsOfDataSourceResponse"/>
  <xsd:complexType name="getRelationsOfDataSourceResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSRelations" type="ns0:WSRelations"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAttributeName" type="tns:getAttributeName"/>
  <xsd:complexType name="getAttributeName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAttributeNameResponse" type="tns:getAttributeNameResponse"/>
  <xsd:complexType name="getAttributeNameResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSAttributeName" type="ns1:WSAttributeName"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getElementOf" type="tns:getElementOf"/>
  <xsd:complexType name="getElementOf">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getElementOfResponse" type="tns:getElementOfResponse"/>
  <xsd:complexType name="getElementOfResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSDataSource" type="ns1:WSDataSource"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getPID" type="tns:getPID"/>
  <xsd:complexType name="getPID">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="conceptId" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getPIDResponse" type="tns:getPIDResponse"/>
  <xsd:complexType name="getPIDResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="pid" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteUnit" type="tns:deleteUnit"/>
  <xsd:complexType name="deleteUnit">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="unitId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteUnitResponse" type="tns:deleteUnitResponse"/>
  <xsd:complexType name="deleteUnitResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getTagsGraph" type="tns:getTagsGraph"/>
  <xsd:complexType name="getTagsGraph">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getTagsGraphResponse" type="tns:getTagsGraphResponse"/>
  <xsd:complexType name="getTagsGraphResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="WSConcepts" type="ns0:WSConcepts"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteRelationAttribute" type="tns:deleteRelationAttribute"/>
  <xsd:complexType name="deleteRelationAttribute">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="graphId" nillable="true" type="xsd:long"/>
      <xsd:element minOccurs="0" name="relationId" nillable="true" type="xsd:int"/>
      <xsd:element minOccurs="0" name="attributeNameId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteRelationAttributeResponse" type="tns:deleteRelationAttributeResponse"/>
  <xsd:complexType name="deleteRelationAttributeResponse">
    <xsd:sequence>
      <xsd:element name="success" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="WebserviceException" nillable="true" type="ns2:WebserviceException"/>
</xsd:schema>
<xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.java" xmlns:ns0="http://result.wsapi.ondex.sourceforge.net" xmlns:tns="http://util.java" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import namespace="http://result.wsapi.ondex.sourceforge.net"/>
  <xsd:complexType name="files">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="string" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSDataSources">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="WSDataSource" nillable="true" type="ns0:WSDataSource"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSConceptNames">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="WSConceptName" nillable="true" type="ns0:WSConceptName"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSConcepts">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="WSConcept" nillable="true" type="ns0:WSConcept"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSGraphs">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="WSGraph" nillable="true" type="ns0:WSGraph"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSAttributeNames">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="WSAttributeName" nillable="true" type="ns0:WSAttributeName"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSAttributes">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="WSAttribute" nillable="true" type="ns0:WSAttribute"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSConceptClasses">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="WSConceptClass" nillable="true" type="ns0:WSConceptClass"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSRelations">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="WSRelation" nillable="true" type="ns0:WSRelation"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSRelationTypes">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="WSRelationType" nillable="true" type="ns0:WSRelationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSUnits">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="WSUnit" nillable="true" type="ns0:WSUnit"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSEvidenceTypes">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="WSEvidenceType" nillable="true" type="ns0:WSEvidenceType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="WSConceptAccessions">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="WSConceptAccession" nillable="true" type="ns0:WSConceptAccession"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="evidenceTypeIdList">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="string" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>
<xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exceptions.wsapi.ondex.sourceforge.net" xmlns:tns="http://exceptions.wsapi.ondex.sourceforge.net" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:complexType name="WebserviceException">
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>
  </wsdl:types>
  <wsdl:message name="getRelationsOfTag">
    <wsdl:part element="tns:getRelationsOfTag" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createConceptClassResponse">
    <wsdl:part element="tns:createConceptClassResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getElementOfResponse">
    <wsdl:part element="tns:getElementOfResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setDescriptionResponse">
    <wsdl:part element="tns:setDescriptionResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="exportGraph">
    <wsdl:part element="tns:exportGraph" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOXLFilesAvailableResponse">
    <wsdl:part element="tns:getOXLFilesAvailableResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="inheritedFromRelation">
    <wsdl:part element="tns:inheritedFromRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkEvidenceType">
    <wsdl:part element="tns:checkEvidenceType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRelationAttributeResponse">
    <wsdl:part element="tns:createRelationAttributeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteConceptAccessionResponse">
    <wsdl:part element="tns:deleteConceptAccessionResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnitResponse">
    <wsdl:part element="tns:getUnitResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteConceptName">
    <wsdl:part element="tns:deleteConceptName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addTagRelationResponse">
    <wsdl:part element="tns:addTagRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeTagRelation">
    <wsdl:part element="tns:removeTagRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRelation">
    <wsdl:part element="tns:createRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeyResponse">
    <wsdl:part element="tns:getKeyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptClass">
    <wsdl:part element="tns:getConceptClass" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkUnitResponse">
    <wsdl:part element="tns:checkUnitResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createUnit">
    <wsdl:part element="tns:createUnit" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkRelationTypeResponse">
    <wsdl:part element="tns:checkRelationTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnit">
    <wsdl:part element="tns:getUnit" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGraphOfName">
    <wsdl:part element="tns:getGraphOfName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfDataSourceResponse">
    <wsdl:part element="tns:getRelationsOfDataSourceResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="importGraph">
    <wsdl:part element="tns:importGraph" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUnitResponse">
    <wsdl:part element="tns:deleteUnitResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfConceptResponse">
    <wsdl:part element="tns:getRelationsOfConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeEvidenceTypeRelation">
    <wsdl:part element="tns:removeEvidenceTypeRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFromConcept">
    <wsdl:part element="tns:getFromConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptsOfDataSource">
    <wsdl:part element="tns:getConceptsOfDataSource" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationTypeResponse">
    <wsdl:part element="tns:getRelationTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfConceptClassResponse">
    <wsdl:part element="tns:getRelationsOfConceptClassResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagsRelation">
    <wsdl:part element="tns:getTagsRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttributeNameResponse">
    <wsdl:part element="tns:getAttributeNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagsConceptResponse">
    <wsdl:part element="tns:getTagsConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRelationType">
    <wsdl:part element="tns:createRelationType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptAccession">
    <wsdl:part element="tns:getConceptAccession" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRelationType">
    <wsdl:part element="tns:deleteRelationType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createTestGraph">
    <wsdl:part element="tns:createTestGraph" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptClasses">
    <wsdl:part element="tns:getConceptClasses" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOfTypeRelationResponse">
    <wsdl:part element="tns:getOfTypeRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptsResponse">
    <wsdl:part element="tns:getConceptsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEvidenceConceptResponse">
    <wsdl:part element="tns:getEvidenceConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="cloneGraphResponse">
    <wsdl:part element="tns:cloneGraphResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createConceptAttribute">
    <wsdl:part element="tns:createConceptAttribute" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataSources">
    <wsdl:part element="tns:getDataSources" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelations">
    <wsdl:part element="tns:getRelations" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRelationTypeResponse">
    <wsdl:part element="tns:deleteRelationTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptNameWithName">
    <wsdl:part element="tns:getConceptNameWithName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfEvidenceType">
    <wsdl:part element="tns:getRelationsOfEvidenceType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="inheritedFromConceptResponse">
    <wsdl:part element="tns:inheritedFromConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isReadOnlyResponse">
    <wsdl:part element="tns:isReadOnlyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptClassResponse">
    <wsdl:part element="tns:getConceptClassResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOfTypeConceptResponse">
    <wsdl:part element="tns:getOfTypeConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="inheritedFromConcept">
    <wsdl:part element="tns:inheritedFromConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGraph">
    <wsdl:part element="tns:deleteGraph" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkUnit">
    <wsdl:part element="tns:checkUnit" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelation">
    <wsdl:part element="tns:getRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGraphResponse">
    <wsdl:part element="tns:deleteGraphResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createConceptResponse">
    <wsdl:part element="tns:createConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsResponse">
    <wsdl:part element="tns:getRelationsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeEvidenceTypeRelationResponse">
    <wsdl:part element="tns:removeEvidenceTypeRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptsOfDataSourceResponse">
    <wsdl:part element="tns:getConceptsOfDataSourceResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="importGraphLiteResponse">
    <wsdl:part element="tns:importGraphLiteResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEvidenceType">
    <wsdl:part element="tns:getEvidenceType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfRelationType">
    <wsdl:part element="tns:getRelationsOfRelationType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteAttributeName">
    <wsdl:part element="tns:deleteAttributeName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfEvidenceTypeResponse">
    <wsdl:part element="tns:getRelationsOfEvidenceTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRelationOfType">
    <wsdl:part element="tns:deleteRelationOfType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteDataSource">
    <wsdl:part element="tns:deleteDataSource" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="exportGraphResponse">
    <wsdl:part element="tns:exportGraphResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttributeNames">
    <wsdl:part element="tns:getAttributeNames" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationType">
    <wsdl:part element="tns:getRelationType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGraphsResponse">
    <wsdl:part element="tns:getGraphsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAttributeName">
    <wsdl:part element="tns:createAttributeName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptsOfEvidenceType">
    <wsdl:part element="tns:getConceptsOfEvidenceType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfTagResponse">
    <wsdl:part element="tns:getRelationsOfTagResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteConceptAttribute">
    <wsdl:part element="tns:deleteConceptAttribute" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptAccessionsResponse">
    <wsdl:part element="tns:getConceptAccessionsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfAttributeName">
    <wsdl:part element="tns:getRelationsOfAttributeName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkAttributeNameResponse">
    <wsdl:part element="tns:checkAttributeNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteConceptClass">
    <wsdl:part element="tns:deleteConceptClass" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getToConcept">
    <wsdl:part element="tns:getToConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRelationTypeResponse">
    <wsdl:part element="tns:createRelationTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptNameWithNameResponse">
    <wsdl:part element="tns:getConceptNameWithNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEvidenceConcept">
    <wsdl:part element="tns:getEvidenceConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createGraph">
    <wsdl:part element="tns:createGraph" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addTagConcept">
    <wsdl:part element="tns:addTagConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isReadOnly">
    <wsdl:part element="tns:isReadOnly" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConcept">
    <wsdl:part element="tns:getConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGraphOfNameResponse">
    <wsdl:part element="tns:getGraphOfNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfConcept">
    <wsdl:part element="tns:getRelationsOfConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkDataSourceResponse">
    <wsdl:part element="tns:checkDataSourceResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfAttributeNameResponse">
    <wsdl:part element="tns:getRelationsOfAttributeNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRelationOfTypeResponse">
    <wsdl:part element="tns:deleteRelationOfTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createConceptName">
    <wsdl:part element="tns:createConceptName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptsOfConceptClass">
    <wsdl:part element="tns:getConceptsOfConceptClass" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRelationResponse">
    <wsdl:part element="tns:createRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createEvidenceType">
    <wsdl:part element="tns:createEvidenceType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEvidenceRelation">
    <wsdl:part element="tns:getEvidenceRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttributeNamesResponse">
    <wsdl:part element="tns:getAttributeNamesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptAttributeResponse">
    <wsdl:part element="tns:getConceptAttributeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeTagConcept">
    <wsdl:part element="tns:removeTagConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptClassesResponse">
    <wsdl:part element="tns:getConceptClassesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="importGraphLite">
    <wsdl:part element="tns:importGraphLite" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteDataSourceResponse">
    <wsdl:part element="tns:deleteDataSourceResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptAttributesResponse">
    <wsdl:part element="tns:getConceptAttributesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createConcept">
    <wsdl:part element="tns:createConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationResponse">
    <wsdl:part element="tns:getRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeTagRelationResponse">
    <wsdl:part element="tns:removeTagRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkEvidenceTypeResponse">
    <wsdl:part element="tns:checkEvidenceTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRelationResponse">
    <wsdl:part element="tns:deleteRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptsOfEvidenceTypeResponse">
    <wsdl:part element="tns:getConceptsOfEvidenceTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createConceptNameResponse">
    <wsdl:part element="tns:createConceptNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setDescription">
    <wsdl:part element="tns:setDescription" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfConceptClass">
    <wsdl:part element="tns:getRelationsOfConceptClass" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createEvidenceTypeResponse">
    <wsdl:part element="tns:createEvidenceTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPIDResponse">
    <wsdl:part element="tns:getPIDResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createConceptAttributeResponse">
    <wsdl:part element="tns:createConceptAttributeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfDataSource">
    <wsdl:part element="tns:getRelationsOfDataSource" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataSource">
    <wsdl:part element="tns:getDataSource" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOfTypeConcept">
    <wsdl:part element="tns:getOfTypeConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptAccessions">
    <wsdl:part element="tns:getConceptAccessions" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkRelationType">
    <wsdl:part element="tns:checkRelationType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createConceptClass">
    <wsdl:part element="tns:createConceptClass" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptResponse">
    <wsdl:part element="tns:getConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setAnnotation">
    <wsdl:part element="tns:setAnnotation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addEvidenceTypeConcept">
    <wsdl:part element="tns:addEvidenceTypeConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkConceptClass">
    <wsdl:part element="tns:checkConceptClass" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNameResponse">
    <wsdl:part element="tns:getNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkDataSource">
    <wsdl:part element="tns:checkDataSource" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeEvidenceTypeConcept">
    <wsdl:part element="tns:removeEvidenceTypeConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptName">
    <wsdl:part element="tns:getConceptName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addTagConceptResponse">
    <wsdl:part element="tns:addTagConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagsConcept">
    <wsdl:part element="tns:getTagsConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUnit">
    <wsdl:part element="tns:deleteUnit" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEvidenceRelationResponse">
    <wsdl:part element="tns:getEvidenceRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptsOfTagResponse">
    <wsdl:part element="tns:getConceptsOfTagResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPID">
    <wsdl:part element="tns:setPID" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkConceptClassResponse">
    <wsdl:part element="tns:checkConceptClassResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteEvidenceTypeResponse">
    <wsdl:part element="tns:deleteEvidenceTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getElementOf">
    <wsdl:part element="tns:getElementOf" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFromConceptResponse">
    <wsdl:part element="tns:getFromConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="WebserviceException">
    <wsdl:part element="tns:WebserviceException" name="WebserviceException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createConceptAccession">
    <wsdl:part element="tns:createConceptAccession" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRelationAttribute">
    <wsdl:part element="tns:deleteRelationAttribute" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteConceptClassResponse">
    <wsdl:part element="tns:deleteConceptClassResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createGraphResponse">
    <wsdl:part element="tns:createGraphResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationsOfRelationTypeResponse">
    <wsdl:part element="tns:getRelationsOfRelationTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagsGraphResponse">
    <wsdl:part element="tns:getTagsGraphResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationAttributes">
    <wsdl:part element="tns:getRelationAttributes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagsGraph">
    <wsdl:part element="tns:getTagsGraph" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addTagRelation">
    <wsdl:part element="tns:addTagRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createDataSourceResponse">
    <wsdl:part element="tns:createDataSourceResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeEvidenceTypeConceptResponse">
    <wsdl:part element="tns:removeEvidenceTypeConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkAttributeName">
    <wsdl:part element="tns:checkAttributeName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteConceptResponse">
    <wsdl:part element="tns:deleteConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRelationAttributeResponse">
    <wsdl:part element="tns:deleteRelationAttributeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptAttributes">
    <wsdl:part element="tns:getConceptAttributes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataSourceResponse">
    <wsdl:part element="tns:getDataSourceResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPIDResponse">
    <wsdl:part element="tns:setPIDResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptsOfAttributeName">
    <wsdl:part element="tns:getConceptsOfAttributeName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptAccessionResponse">
    <wsdl:part element="tns:getConceptAccessionResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptsOfAttributeNameResponse">
    <wsdl:part element="tns:getConceptsOfAttributeNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConcepts">
    <wsdl:part element="tns:getConcepts" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationTypes">
    <wsdl:part element="tns:getRelationTypes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteEvidenceType">
    <wsdl:part element="tns:deleteEvidenceType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDescriptionResponse">
    <wsdl:part element="tns:getDescriptionResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptNameResponse">
    <wsdl:part element="tns:getConceptNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteConceptNameResponse">
    <wsdl:part element="tns:deleteConceptNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAnnotationResponse">
    <wsdl:part element="tns:getAnnotationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeTagConceptResponse">
    <wsdl:part element="tns:removeTagConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getToConceptResponse">
    <wsdl:part element="tns:getToConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptsOfTag">
    <wsdl:part element="tns:getConceptsOfTag" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEvidenceTypes">
    <wsdl:part element="tns:getEvidenceTypes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptsOfConceptClassResponse">
    <wsdl:part element="tns:getConceptsOfConceptClassResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createDataSource">
    <wsdl:part element="tns:createDataSource" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRelation">
    <wsdl:part element="tns:deleteRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptAttribute">
    <wsdl:part element="tns:getConceptAttribute" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGraphs">
    <wsdl:part element="tns:getGraphs" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="exportGraphLite">
    <wsdl:part element="tns:exportGraphLite" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptNamesResponse">
    <wsdl:part element="tns:getConceptNamesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addEvidenceTypeRelation">
    <wsdl:part element="tns:addEvidenceTypeRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="inheritedFromRelationResponse">
    <wsdl:part element="tns:inheritedFromRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="cloneGraph">
    <wsdl:part element="tns:cloneGraph" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addEvidenceTypeConceptResponse">
    <wsdl:part element="tns:addEvidenceTypeConceptResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="importGraphResponse">
    <wsdl:part element="tns:importGraphResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKey">
    <wsdl:part element="tns:getKey" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationOfTypeResponse">
    <wsdl:part element="tns:getRelationOfTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOXLFilesAvailable">
    <wsdl:part element="tns:getOXLFilesAvailable" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationOfType">
    <wsdl:part element="tns:getRelationOfType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConceptNames">
    <wsdl:part element="tns:getConceptNames" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createUnitResponse">
    <wsdl:part element="tns:createUnitResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationAttribute">
    <wsdl:part element="tns:getRelationAttribute" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationTypesResponse">
    <wsdl:part element="tns:getRelationTypesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOfTypeRelation">
    <wsdl:part element="tns:getOfTypeRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createTestGraphResponse">
    <wsdl:part element="tns:createTestGraphResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEvidenceTypeResponse">
    <wsdl:part element="tns:getEvidenceTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteConcept">
    <wsdl:part element="tns:deleteConcept" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttributeName">
    <wsdl:part element="tns:getAttributeName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createConceptAccessionResponse">
    <wsdl:part element="tns:createConceptAccessionResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationAttributeResponse">
    <wsdl:part element="tns:getRelationAttributeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelationAttributesResponse">
    <wsdl:part element="tns:getRelationAttributesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="exportGraphLiteResponse">
    <wsdl:part element="tns:exportGraphLiteResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPID">
    <wsdl:part element="tns:getPID" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnits">
    <wsdl:part element="tns:getUnits" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createMemoryGraphResponse">
    <wsdl:part element="tns:createMemoryGraphResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addEvidenceTypeRelationResponse">
    <wsdl:part element="tns:addEvidenceTypeRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataSourcesResponse">
    <wsdl:part element="tns:getDataSourcesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteConceptAttributeResponse">
    <wsdl:part element="tns:deleteConceptAttributeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteAttributeNameResponse">
    <wsdl:part element="tns:deleteAttributeNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEvidenceTypesResponse">
    <wsdl:part element="tns:getEvidenceTypesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setAnnotationResponse">
    <wsdl:part element="tns:setAnnotationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAttributeNameResponse">
    <wsdl:part element="tns:createAttributeNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getName">
    <wsdl:part element="tns:getName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTagsRelationResponse">
    <wsdl:part element="tns:getTagsRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRelationAttribute">
    <wsdl:part element="tns:createRelationAttribute" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteConceptAccession">
    <wsdl:part element="tns:deleteConceptAccession" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUnitsResponse">
    <wsdl:part element="tns:getUnitsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createMemoryGraph">
    <wsdl:part element="tns:createMemoryGraph" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAnnotation">
    <wsdl:part element="tns:getAnnotation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDescription">
    <wsdl:part element="tns:getDescription" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ONDEXapiWS">
    <wsdl:operation name="deleteConcept">
      <wsdl:input message="tns:deleteConcept" name="deleteConcept">
    </wsdl:input>
      <wsdl:output message="tns:deleteConceptResponse" name="deleteConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importGraph">
      <wsdl:input message="tns:importGraph" name="importGraph">
    </wsdl:input>
      <wsdl:output message="tns:importGraphResponse" name="importGraphResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createEvidenceType">
      <wsdl:input message="tns:createEvidenceType" name="createEvidenceType">
    </wsdl:input>
      <wsdl:output message="tns:createEvidenceTypeResponse" name="createEvidenceTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteEvidenceType">
      <wsdl:input message="tns:deleteEvidenceType" name="deleteEvidenceType">
    </wsdl:input>
      <wsdl:output message="tns:deleteEvidenceTypeResponse" name="deleteEvidenceTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEvidenceConcept">
      <wsdl:input message="tns:getEvidenceConcept" name="getEvidenceConcept">
    </wsdl:input>
      <wsdl:output message="tns:getEvidenceConceptResponse" name="getEvidenceConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOfTypeRelation">
      <wsdl:input message="tns:getOfTypeRelation" name="getOfTypeRelation">
    </wsdl:input>
      <wsdl:output message="tns:getOfTypeRelationResponse" name="getOfTypeRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAttributeName">
      <wsdl:input message="tns:deleteAttributeName" name="deleteAttributeName">
    </wsdl:input>
      <wsdl:output message="tns:deleteAttributeNameResponse" name="deleteAttributeNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getToConcept">
      <wsdl:input message="tns:getToConcept" name="getToConcept">
    </wsdl:input>
      <wsdl:output message="tns:getToConceptResponse" name="getToConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptsOfEvidenceType">
      <wsdl:input message="tns:getConceptsOfEvidenceType" name="getConceptsOfEvidenceType">
    </wsdl:input>
      <wsdl:output message="tns:getConceptsOfEvidenceTypeResponse" name="getConceptsOfEvidenceTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRelation">
      <wsdl:input message="tns:createRelation" name="createRelation">
    </wsdl:input>
      <wsdl:output message="tns:createRelationResponse" name="createRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkConceptClass">
      <wsdl:input message="tns:checkConceptClass" name="checkConceptClass">
    </wsdl:input>
      <wsdl:output message="tns:checkConceptClassResponse" name="checkConceptClassResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkAttributeName">
      <wsdl:input message="tns:checkAttributeName" name="checkAttributeName">
    </wsdl:input>
      <wsdl:output message="tns:checkAttributeNameResponse" name="checkAttributeNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAnnotation">
      <wsdl:input message="tns:getAnnotation" name="getAnnotation">
    </wsdl:input>
      <wsdl:output message="tns:getAnnotationResponse" name="getAnnotationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteConceptName">
      <wsdl:input message="tns:deleteConceptName" name="deleteConceptName">
    </wsdl:input>
      <wsdl:output message="tns:deleteConceptNameResponse" name="deleteConceptNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDataSource">
      <wsdl:input message="tns:createDataSource" name="createDataSource">
    </wsdl:input>
      <wsdl:output message="tns:createDataSourceResponse" name="createDataSourceResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cloneGraph">
      <wsdl:input message="tns:cloneGraph" name="cloneGraph">
    </wsdl:input>
      <wsdl:output message="tns:cloneGraphResponse" name="cloneGraphResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteConceptClass">
      <wsdl:input message="tns:deleteConceptClass" name="deleteConceptClass">
    </wsdl:input>
      <wsdl:output message="tns:deleteConceptClassResponse" name="deleteConceptClassResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptNameWithName">
      <wsdl:input message="tns:getConceptNameWithName" name="getConceptNameWithName">
    </wsdl:input>
      <wsdl:output message="tns:getConceptNameWithNameResponse" name="getConceptNameWithNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelation">
      <wsdl:input message="tns:getRelation" name="getRelation">
    </wsdl:input>
      <wsdl:output message="tns:getRelationResponse" name="getRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createConceptClass">
      <wsdl:input message="tns:createConceptClass" name="createConceptClass">
    </wsdl:input>
      <wsdl:output message="tns:createConceptClassResponse" name="createConceptClassResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptAccession">
      <wsdl:input message="tns:getConceptAccession" name="getConceptAccession">
    </wsdl:input>
      <wsdl:output message="tns:getConceptAccessionResponse" name="getConceptAccessionResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="inheritedFromRelation">
      <wsdl:input message="tns:inheritedFromRelation" name="inheritedFromRelation">
    </wsdl:input>
      <wsdl:output message="tns:inheritedFromRelationResponse" name="inheritedFromRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createConceptName">
      <wsdl:input message="tns:createConceptName" name="createConceptName">
    </wsdl:input>
      <wsdl:output message="tns:createConceptNameResponse" name="createConceptNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importGraphLite">
      <wsdl:input message="tns:importGraphLite" name="importGraphLite">
    </wsdl:input>
      <wsdl:output message="tns:importGraphLiteResponse" name="importGraphLiteResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptClass">
      <wsdl:input message="tns:getConceptClass" name="getConceptClass">
    </wsdl:input>
      <wsdl:output message="tns:getConceptClassResponse" name="getConceptClassResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationAttributes">
      <wsdl:input message="tns:getRelationAttributes" name="getRelationAttributes">
    </wsdl:input>
      <wsdl:output message="tns:getRelationAttributesResponse" name="getRelationAttributesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfTag">
      <wsdl:input message="tns:getRelationsOfTag" name="getRelationsOfTag">
    </wsdl:input>
      <wsdl:output message="tns:getRelationsOfTagResponse" name="getRelationsOfTagResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataSource">
      <wsdl:input message="tns:getDataSource" name="getDataSource">
    </wsdl:input>
      <wsdl:output message="tns:getDataSourceResponse" name="getDataSourceResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createConceptAttribute">
      <wsdl:input message="tns:createConceptAttribute" name="createConceptAttribute">
    </wsdl:input>
      <wsdl:output message="tns:createConceptAttributeResponse" name="createConceptAttributeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfAttributeName">
      <wsdl:input message="tns:getRelationsOfAttributeName" name="getRelationsOfAttributeName">
    </wsdl:input>
      <wsdl:output message="tns:getRelationsOfAttributeNameResponse" name="getRelationsOfAttributeNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="exportGraph">
      <wsdl:input message="tns:exportGraph" name="exportGraph">
    </wsdl:input>
      <wsdl:output message="tns:exportGraphResponse" name="exportGraphResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptAccessions">
      <wsdl:input message="tns:getConceptAccessions" name="getConceptAccessions">
    </wsdl:input>
      <wsdl:output message="tns:getConceptAccessionsResponse" name="getConceptAccessionsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptsOfConceptClass">
      <wsdl:input message="tns:getConceptsOfConceptClass" name="getConceptsOfConceptClass">
    </wsdl:input>
      <wsdl:output message="tns:getConceptsOfConceptClassResponse" name="getConceptsOfConceptClassResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getKey">
      <wsdl:input message="tns:getKey" name="getKey">
    </wsdl:input>
      <wsdl:output message="tns:getKeyResponse" name="getKeyResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPID">
      <wsdl:input message="tns:setPID" name="setPID">
    </wsdl:input>
      <wsdl:output message="tns:setPIDResponse" name="setPIDResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOXLFilesAvailable">
      <wsdl:input message="tns:getOXLFilesAvailable" name="getOXLFilesAvailable">
    </wsdl:input>
      <wsdl:output message="tns:getOXLFilesAvailableResponse" name="getOXLFilesAvailableResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGraphs">
      <wsdl:input message="tns:getGraphs" name="getGraphs">
    </wsdl:input>
      <wsdl:output message="tns:getGraphsResponse" name="getGraphsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptClasses">
      <wsdl:input message="tns:getConceptClasses" name="getConceptClasses">
    </wsdl:input>
      <wsdl:output message="tns:getConceptClassesResponse" name="getConceptClassesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addEvidenceTypeRelation">
      <wsdl:input message="tns:addEvidenceTypeRelation" name="addEvidenceTypeRelation">
    </wsdl:input>
      <wsdl:output message="tns:addEvidenceTypeRelationResponse" name="addEvidenceTypeRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataSources">
      <wsdl:input message="tns:getDataSources" name="getDataSources">
    </wsdl:input>
      <wsdl:output message="tns:getDataSourcesResponse" name="getDataSourcesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptAttribute">
      <wsdl:input message="tns:getConceptAttribute" name="getConceptAttribute">
    </wsdl:input>
      <wsdl:output message="tns:getConceptAttributeResponse" name="getConceptAttributeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeTagRelation">
      <wsdl:input message="tns:removeTagRelation" name="removeTagRelation">
    </wsdl:input>
      <wsdl:output message="tns:removeTagRelationResponse" name="removeTagRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createUnit">
      <wsdl:input message="tns:createUnit" name="createUnit">
    </wsdl:input>
      <wsdl:output message="tns:createUnitResponse" name="createUnitResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRelationAttribute">
      <wsdl:input message="tns:createRelationAttribute" name="createRelationAttribute">
    </wsdl:input>
      <wsdl:output message="tns:createRelationAttributeResponse" name="createRelationAttributeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGraphOfName">
      <wsdl:input message="tns:getGraphOfName" name="getGraphOfName">
    </wsdl:input>
      <wsdl:output message="tns:getGraphOfNameResponse" name="getGraphOfNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnly">
      <wsdl:input message="tns:isReadOnly" name="isReadOnly">
    </wsdl:input>
      <wsdl:output message="tns:isReadOnlyResponse" name="isReadOnlyResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTagsRelation">
      <wsdl:input message="tns:getTagsRelation" name="getTagsRelation">
    </wsdl:input>
      <wsdl:output message="tns:getTagsRelationResponse" name="getTagsRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEvidenceRelation">
      <wsdl:input message="tns:getEvidenceRelation" name="getEvidenceRelation">
    </wsdl:input>
      <wsdl:output message="tns:getEvidenceRelationResponse" name="getEvidenceRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRelationType">
      <wsdl:input message="tns:createRelationType" name="createRelationType">
    </wsdl:input>
      <wsdl:output message="tns:createRelationTypeResponse" name="createRelationTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkEvidenceType">
      <wsdl:input message="tns:checkEvidenceType" name="checkEvidenceType">
    </wsdl:input>
      <wsdl:output message="tns:checkEvidenceTypeResponse" name="checkEvidenceTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getName">
      <wsdl:input message="tns:getName" name="getName">
    </wsdl:input>
      <wsdl:output message="tns:getNameResponse" name="getNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkRelationType">
      <wsdl:input message="tns:checkRelationType" name="checkRelationType">
    </wsdl:input>
      <wsdl:output message="tns:checkRelationTypeResponse" name="checkRelationTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTagConcept">
      <wsdl:input message="tns:addTagConcept" name="addTagConcept">
    </wsdl:input>
      <wsdl:output message="tns:addTagConceptResponse" name="addTagConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFromConcept">
      <wsdl:input message="tns:getFromConcept" name="getFromConcept">
    </wsdl:input>
      <wsdl:output message="tns:getFromConceptResponse" name="getFromConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTagRelation">
      <wsdl:input message="tns:addTagRelation" name="addTagRelation">
    </wsdl:input>
      <wsdl:output message="tns:addTagRelationResponse" name="addTagRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addEvidenceTypeConcept">
      <wsdl:input message="tns:addEvidenceTypeConcept" name="addEvidenceTypeConcept">
    </wsdl:input>
      <wsdl:output message="tns:addEvidenceTypeConceptResponse" name="addEvidenceTypeConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeNames">
      <wsdl:input message="tns:getAttributeNames" name="getAttributeNames">
    </wsdl:input>
      <wsdl:output message="tns:getAttributeNamesResponse" name="getAttributeNamesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfEvidenceType">
      <wsdl:input message="tns:getRelationsOfEvidenceType" name="getRelationsOfEvidenceType">
    </wsdl:input>
      <wsdl:output message="tns:getRelationsOfEvidenceTypeResponse" name="getRelationsOfEvidenceTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDescription">
      <wsdl:input message="tns:getDescription" name="getDescription">
    </wsdl:input>
      <wsdl:output message="tns:getDescriptionResponse" name="getDescriptionResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfConcept">
      <wsdl:input message="tns:getRelationsOfConcept" name="getRelationsOfConcept">
    </wsdl:input>
      <wsdl:output message="tns:getRelationsOfConceptResponse" name="getRelationsOfConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteDataSource">
      <wsdl:input message="tns:deleteDataSource" name="deleteDataSource">
    </wsdl:input>
      <wsdl:output message="tns:deleteDataSourceResponse" name="deleteDataSourceResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeTagConcept">
      <wsdl:input message="tns:removeTagConcept" name="removeTagConcept">
    </wsdl:input>
      <wsdl:output message="tns:removeTagConceptResponse" name="removeTagConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfRelationType">
      <wsdl:input message="tns:getRelationsOfRelationType" name="getRelationsOfRelationType">
    </wsdl:input>
      <wsdl:output message="tns:getRelationsOfRelationTypeResponse" name="getRelationsOfRelationTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="inheritedFromConcept">
      <wsdl:input message="tns:inheritedFromConcept" name="inheritedFromConcept">
    </wsdl:input>
      <wsdl:output message="tns:inheritedFromConceptResponse" name="inheritedFromConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGraph">
      <wsdl:input message="tns:deleteGraph" name="deleteGraph">
    </wsdl:input>
      <wsdl:output message="tns:deleteGraphResponse" name="deleteGraphResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAttributeName">
      <wsdl:input message="tns:createAttributeName" name="createAttributeName">
    </wsdl:input>
      <wsdl:output message="tns:createAttributeNameResponse" name="createAttributeNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEvidenceTypes">
      <wsdl:input message="tns:getEvidenceTypes" name="getEvidenceTypes">
    </wsdl:input>
      <wsdl:output message="tns:getEvidenceTypesResponse" name="getEvidenceTypesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOfTypeConcept">
      <wsdl:input message="tns:getOfTypeConcept" name="getOfTypeConcept">
    </wsdl:input>
      <wsdl:output message="tns:getOfTypeConceptResponse" name="getOfTypeConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRelationType">
      <wsdl:input message="tns:deleteRelationType" name="deleteRelationType">
    </wsdl:input>
      <wsdl:output message="tns:deleteRelationTypeResponse" name="deleteRelationTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteConceptAccession">
      <wsdl:input message="tns:deleteConceptAccession" name="deleteConceptAccession">
    </wsdl:input>
      <wsdl:output message="tns:deleteConceptAccessionResponse" name="deleteConceptAccessionResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkUnit">
      <wsdl:input message="tns:checkUnit" name="checkUnit">
    </wsdl:input>
      <wsdl:output message="tns:checkUnitResponse" name="checkUnitResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRelationOfType">
      <wsdl:input message="tns:deleteRelationOfType" name="deleteRelationOfType">
    </wsdl:input>
      <wsdl:output message="tns:deleteRelationOfTypeResponse" name="deleteRelationOfTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createTestGraph">
      <wsdl:input message="tns:createTestGraph" name="createTestGraph">
    </wsdl:input>
      <wsdl:output message="tns:createTestGraphResponse" name="createTestGraphResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationOfType">
      <wsdl:input message="tns:getRelationOfType" name="getRelationOfType">
    </wsdl:input>
      <wsdl:output message="tns:getRelationOfTypeResponse" name="getRelationOfTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createConcept">
      <wsdl:input message="tns:createConcept" name="createConcept">
    </wsdl:input>
      <wsdl:output message="tns:createConceptResponse" name="createConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTagsConcept">
      <wsdl:input message="tns:getTagsConcept" name="getTagsConcept">
    </wsdl:input>
      <wsdl:output message="tns:getTagsConceptResponse" name="getTagsConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationAttribute">
      <wsdl:input message="tns:getRelationAttribute" name="getRelationAttribute">
    </wsdl:input>
      <wsdl:output message="tns:getRelationAttributeResponse" name="getRelationAttributeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConcepts">
      <wsdl:input message="tns:getConcepts" name="getConcepts">
    </wsdl:input>
      <wsdl:output message="tns:getConceptsResponse" name="getConceptsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelations">
      <wsdl:input message="tns:getRelations" name="getRelations">
    </wsdl:input>
      <wsdl:output message="tns:getRelationsResponse" name="getRelationsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfConceptClass">
      <wsdl:input message="tns:getRelationsOfConceptClass" name="getRelationsOfConceptClass">
    </wsdl:input>
      <wsdl:output message="tns:getRelationsOfConceptClassResponse" name="getRelationsOfConceptClassResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConcept">
      <wsdl:input message="tns:getConcept" name="getConcept">
    </wsdl:input>
      <wsdl:output message="tns:getConceptResponse" name="getConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptsOfTag">
      <wsdl:input message="tns:getConceptsOfTag" name="getConceptsOfTag">
    </wsdl:input>
      <wsdl:output message="tns:getConceptsOfTagResponse" name="getConceptsOfTagResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="exportGraphLite">
      <wsdl:input message="tns:exportGraphLite" name="exportGraphLite">
    </wsdl:input>
      <wsdl:output message="tns:exportGraphLiteResponse" name="exportGraphLiteResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationTypes">
      <wsdl:input message="tns:getRelationTypes" name="getRelationTypes">
    </wsdl:input>
      <wsdl:output message="tns:getRelationTypesResponse" name="getRelationTypesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationType">
      <wsdl:input message="tns:getRelationType" name="getRelationType">
    </wsdl:input>
      <wsdl:output message="tns:getRelationTypeResponse" name="getRelationTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeEvidenceTypeConcept">
      <wsdl:input message="tns:removeEvidenceTypeConcept" name="removeEvidenceTypeConcept">
    </wsdl:input>
      <wsdl:output message="tns:removeEvidenceTypeConceptResponse" name="removeEvidenceTypeConceptResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createConceptAccession">
      <wsdl:input message="tns:createConceptAccession" name="createConceptAccession">
    </wsdl:input>
      <wsdl:output message="tns:createConceptAccessionResponse" name="createConceptAccessionResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setAnnotation">
      <wsdl:input message="tns:setAnnotation" name="setAnnotation">
    </wsdl:input>
      <wsdl:output message="tns:setAnnotationResponse" name="setAnnotationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptNames">
      <wsdl:input message="tns:getConceptNames" name="getConceptNames">
    </wsdl:input>
      <wsdl:output message="tns:getConceptNamesResponse" name="getConceptNamesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createGraph">
      <wsdl:input message="tns:createGraph" name="createGraph">
    </wsdl:input>
      <wsdl:output message="tns:createGraphResponse" name="createGraphResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptName">
      <wsdl:input message="tns:getConceptName" name="getConceptName">
    </wsdl:input>
      <wsdl:output message="tns:getConceptNameResponse" name="getConceptNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setDescription">
      <wsdl:input message="tns:setDescription" name="setDescription">
    </wsdl:input>
      <wsdl:output message="tns:setDescriptionResponse" name="setDescriptionResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnits">
      <wsdl:input message="tns:getUnits" name="getUnits">
    </wsdl:input>
      <wsdl:output message="tns:getUnitsResponse" name="getUnitsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkDataSource">
      <wsdl:input message="tns:checkDataSource" name="checkDataSource">
    </wsdl:input>
      <wsdl:output message="tns:checkDataSourceResponse" name="checkDataSourceResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteConceptAttribute">
      <wsdl:input message="tns:deleteConceptAttribute" name="deleteConceptAttribute">
    </wsdl:input>
      <wsdl:output message="tns:deleteConceptAttributeResponse" name="deleteConceptAttributeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptsOfDataSource">
      <wsdl:input message="tns:getConceptsOfDataSource" name="getConceptsOfDataSource">
    </wsdl:input>
      <wsdl:output message="tns:getConceptsOfDataSourceResponse" name="getConceptsOfDataSourceResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptAttributes">
      <wsdl:input message="tns:getConceptAttributes" name="getConceptAttributes">
    </wsdl:input>
      <wsdl:output message="tns:getConceptAttributesResponse" name="getConceptAttributesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createMemoryGraph">
      <wsdl:input message="tns:createMemoryGraph" name="createMemoryGraph">
    </wsdl:input>
      <wsdl:output message="tns:createMemoryGraphResponse" name="createMemoryGraphResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEvidenceType">
      <wsdl:input message="tns:getEvidenceType" name="getEvidenceType">
    </wsdl:input>
      <wsdl:output message="tns:getEvidenceTypeResponse" name="getEvidenceTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnit">
      <wsdl:input message="tns:getUnit" name="getUnit">
    </wsdl:input>
      <wsdl:output message="tns:getUnitResponse" name="getUnitResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptsOfAttributeName">
      <wsdl:input message="tns:getConceptsOfAttributeName" name="getConceptsOfAttributeName">
    </wsdl:input>
      <wsdl:output message="tns:getConceptsOfAttributeNameResponse" name="getConceptsOfAttributeNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeEvidenceTypeRelation">
      <wsdl:input message="tns:removeEvidenceTypeRelation" name="removeEvidenceTypeRelation">
    </wsdl:input>
      <wsdl:output message="tns:removeEvidenceTypeRelationResponse" name="removeEvidenceTypeRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRelation">
      <wsdl:input message="tns:deleteRelation" name="deleteRelation">
    </wsdl:input>
      <wsdl:output message="tns:deleteRelationResponse" name="deleteRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfDataSource">
      <wsdl:input message="tns:getRelationsOfDataSource" name="getRelationsOfDataSource">
    </wsdl:input>
      <wsdl:output message="tns:getRelationsOfDataSourceResponse" name="getRelationsOfDataSourceResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeName">
      <wsdl:input message="tns:getAttributeName" name="getAttributeName">
    </wsdl:input>
      <wsdl:output message="tns:getAttributeNameResponse" name="getAttributeNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getElementOf">
      <wsdl:input message="tns:getElementOf" name="getElementOf">
    </wsdl:input>
      <wsdl:output message="tns:getElementOfResponse" name="getElementOfResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPID">
      <wsdl:input message="tns:getPID" name="getPID">
    </wsdl:input>
      <wsdl:output message="tns:getPIDResponse" name="getPIDResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUnit">
      <wsdl:input message="tns:deleteUnit" name="deleteUnit">
    </wsdl:input>
      <wsdl:output message="tns:deleteUnitResponse" name="deleteUnitResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTagsGraph">
      <wsdl:input message="tns:getTagsGraph" name="getTagsGraph">
    </wsdl:input>
      <wsdl:output message="tns:getTagsGraphResponse" name="getTagsGraphResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRelationAttribute">
      <wsdl:input message="tns:deleteRelationAttribute" name="deleteRelationAttribute">
    </wsdl:input>
      <wsdl:output message="tns:deleteRelationAttributeResponse" name="deleteRelationAttributeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WebserviceException" name="WebserviceException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ONDEXapiWSServiceSoapBinding" type="tns:ONDEXapiWS">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="deleteConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createEvidenceType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createEvidenceType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createEvidenceTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importGraph">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="importGraph">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="importGraphResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteEvidenceType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteEvidenceType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteEvidenceTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAttributeName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteAttributeName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteAttributeNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOfTypeRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOfTypeRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOfTypeRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEvidenceConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEvidenceConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEvidenceConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptsOfEvidenceType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptsOfEvidenceType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptsOfEvidenceTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getToConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getToConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getToConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkConceptClass">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkConceptClass">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkConceptClassResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkAttributeName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkAttributeName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkAttributeNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDataSource">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createDataSource">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createDataSourceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteConceptName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteConceptName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteConceptNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAnnotation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAnnotation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAnnotationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cloneGraph">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="cloneGraph">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cloneGraphResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteConceptClass">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteConceptClass">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteConceptClassResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptNameWithName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptNameWithName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptNameWithNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createConceptClass">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createConceptClass">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createConceptClassResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptAccession">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptAccession">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptAccessionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="inheritedFromRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="inheritedFromRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="inheritedFromRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createConceptName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createConceptName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createConceptNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importGraphLite">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="importGraphLite">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="importGraphLiteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptClass">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptClass">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptClassResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationAttributes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelationAttributes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationAttributesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfTag">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelationsOfTag">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationsOfTagResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createConceptAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createConceptAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createConceptAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataSource">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDataSource">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDataSourceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfAttributeName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelationsOfAttributeName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationsOfAttributeNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="exportGraph">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="exportGraph">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="exportGraphResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptAccessions">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptAccessions">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptAccessionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptsOfConceptClass">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptsOfConceptClass">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptsOfConceptClassResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getKey">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getKey">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getKeyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPID">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setPID">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setPIDResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGraphs">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGraphs">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGraphsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOXLFilesAvailable">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOXLFilesAvailable">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOXLFilesAvailableResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptClasses">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptClasses">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptClassesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addEvidenceTypeRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addEvidenceTypeRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addEvidenceTypeRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataSources">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDataSources">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDataSourcesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeTagRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeTagRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeTagRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createUnit">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createUnit">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createUnitResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRelationAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRelationAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRelationAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGraphOfName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGraphOfName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGraphOfNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnly">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isReadOnly">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isReadOnlyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTagsRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTagsRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTagsRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEvidenceRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEvidenceRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEvidenceRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkEvidenceType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkEvidenceType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkEvidenceTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTagConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addTagConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addTagConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTagRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addTagRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addTagRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFromConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getFromConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getFromConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addEvidenceTypeConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addEvidenceTypeConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addEvidenceTypeConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeNames">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAttributeNames">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAttributeNamesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfEvidenceType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelationsOfEvidenceType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationsOfEvidenceTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteDataSource">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteDataSource">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteDataSourceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDescription">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDescription">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDescriptionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelationsOfConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationsOfConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelationsOfRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationsOfRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeTagConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeTagConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeTagConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAttributeName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createAttributeName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAttributeNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGraph">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteGraph">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteGraphResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="inheritedFromConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="inheritedFromConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="inheritedFromConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEvidenceTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEvidenceTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEvidenceTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOfTypeConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOfTypeConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOfTypeConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteConceptAccession">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteConceptAccession">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteConceptAccessionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkUnit">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkUnit">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkUnitResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRelationOfType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteRelationOfType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteRelationOfTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createTestGraph">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createTestGraph">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createTestGraphResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationOfType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelationOfType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationOfTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelationAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTagsConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTagsConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTagsConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConcepts">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConcepts">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelations">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelations">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfConceptClass">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelationsOfConceptClass">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationsOfConceptClassResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptsOfTag">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptsOfTag">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptsOfTagResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="exportGraphLite">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="exportGraphLite">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="exportGraphLiteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeEvidenceTypeConcept">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeEvidenceTypeConcept">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeEvidenceTypeConceptResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createConceptAccession">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createConceptAccession">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createConceptAccessionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setAnnotation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setAnnotation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setAnnotationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptNames">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptNames">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptNamesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createGraph">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createGraph">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createGraphResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setDescription">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="setDescription">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setDescriptionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkDataSource">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkDataSource">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkDataSourceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnits">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUnits">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUnitsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteConceptAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteConceptAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteConceptAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptsOfDataSource">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptsOfDataSource">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptsOfDataSourceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptAttributes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptAttributes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptAttributesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createMemoryGraph">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createMemoryGraph">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createMemoryGraphResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEvidenceType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEvidenceType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEvidenceTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUnit">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUnit">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUnitResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConceptsOfAttributeName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getConceptsOfAttributeName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getConceptsOfAttributeNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeEvidenceTypeRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeEvidenceTypeRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeEvidenceTypeRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAttributeName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAttributeNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelationsOfDataSource">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelationsOfDataSource">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelationsOfDataSourceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getElementOf">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getElementOf">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getElementOfResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPID">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPID">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPIDResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUnit">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteUnit">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteUnitResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTagsGraph">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTagsGraph">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTagsGraphResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRelationAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteRelationAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteRelationAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WebserviceException">
        <soap:fault name="WebserviceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ONDEXapiWSService">
    <wsdl:port binding="tns:ONDEXapiWSServiceSoapBinding" name="ONDEXapiWSPort">
      <soap:address location="http://localhost:8080/ondex/services/ONDEXapiWS"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>