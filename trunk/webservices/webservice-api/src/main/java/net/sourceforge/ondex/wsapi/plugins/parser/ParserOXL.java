/* Webservice wrapper of the Parserplugins.
*
*/
//WARNING AUTOGENERATED DO NOT EDIT DIRECTLY AS EDITS WILL BE OVERWRITTED.

package net.sourceforge.ondex.wsapi.plugins.parser;

import net.sourceforge.ondex.ONDEXPluginArguments;
import net.sourceforge.ondex.core.ONDEXGraph;
import net.sourceforge.ondex.wsapi.exceptions.CaughtException;
import net.sourceforge.ondex.wsapi.exceptions.WebserviceException;
import net.sourceforge.ondex.wsapi.plugins.PluginWS;
import org.apache.log4j.Logger;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;

/**
* AutoGenerated
* @author Christian Brenninkmeijer
*/
public class ParserOXL extends PluginWS {

    private static final Logger logger = Logger.getLogger(ParserOXL.class);

    public ParserOXL() throws CaughtException{
        super();
    }

     /**
     * Method to run Parser in oxl package.
     *
 	 *    Status: STABLE Tested March 2010 (Artem Lysenko)
 	 *    Authors: Matthew Pocock, Jan Taubert, K Sieren, 
 	 *    Custodians: Jan Taubert, 
     * @param IgnoreGDS
 	 *            (Optional. No Default.) [List]Do not parse Attribute attributes with specified AttributeName
     * @param InputFileString
 	 *            (REQUIRED!) (Use this or InputFileByteArray NOT BOTH.) OXL file to load
     *        Legal values for the String are:
     *        1) Path and Name of a File Stored on the Server.
     *        2) Valid URL pointing to the file. (Traverna New Value)
     *        3) Valid URL pointing to a gzip file (as identified by ".gz" ending. 
     *                 (Traverna New Value)
     *        4) Actaul String value. Avoid using this option if data is in a URL (use 3). 
     *                 (Traverna Add file location or Add URL)
     * @param InputFileByteArray
 	 *            (REQUIRED!) (Only used if InputFileString is null or "".) GZip representation of OXL file to load
     * @param graphId
 	 *            (REQUIRED! No Default!) The ID of the Graph
     * @return String representation of all event fired by the parser
     * @throws WebserviceException
     */
    @WebResult(name = "info")
    @WebMethod(exclude = false)
    public String oxlParser(
           @WebParam(name = "IgnoreAttribute")java.lang.String[] IgnoreAttribute,
           @WebParam(name = "InputFileString") String InputFileString,
           @WebParam(name = "InputFileByteArray") byte[] InputFileByteArray,
           @WebParam(name = "graphId") Long graphId)
           throws WebserviceException {
        try{
           logger.info("API parser oxl called!");
           net.sourceforge.ondex.parser.oxl.Parser parser =
                   new net.sourceforge.ondex.parser.oxl.Parser();
           logger.info("Parser created "+parser);
           ONDEXGraph graph = webServiceEngine.getGraphToEdit(graphId);
           logger.info("found graph");
           ONDEXPluginArguments arguments = new ONDEXPluginArguments(parser.getArgumentDefinitions());
           createArguement(parser, arguments, "IgnoreAttribute", IgnoreAttribute);
           createInputFileArguement(parser, arguments, "InputFile", InputFileString, InputFileByteArray);
           logger.info("created arguements");
           return runParser(graph, parser, arguments);
        } catch (WebserviceException e)   {
            throw e;
        } catch (Exception e)    {
            throw new CaughtException (e, logger);
        }
    } //WARNING AUTOGENERATED DO NOT EDIT DIRECTLY AS EDITS WILL BE OVERWRITTED.

  

}